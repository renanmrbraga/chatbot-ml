services:
  postgres:
    image: postgres:latest
    container_name: chatbot_postgres
    ports:
      - '5432:5432' # Comentar em produção
    environment:
      POSTGRES_DB: chatbot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: devmode123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
      - -c
      - hba_file=/etc/postgresql/pg_hba.conf
    networks:
      - chatbot-net

  mongo:
    image: mongo:latest
    container_name: chatbot_mongo
    ports:
      - '27017:27017' # Comentar em produção
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: devmode123
    volumes:
      - mongo_data:/data/db
      - ./mongo/mongod.conf:/etc/mongod.conf:ro
      - ./mongo/log:/var/log/mongodb:rw
    user: root
    command: ['mongod', '--auth', '--config', '/etc/mongod.conf']
    networks:
      - chatbot-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chatbot_backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    expose:
      - '8000'
    depends_on:
      - postgres
      - mongo
    networks:
      - chatbot-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatbot_frontend
    env_file:
      - ./frontend/.env
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=8080
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=100
    ports:
      - '8080:8080'
    volumes:
      - ./frontend:/app
      - ./frontend/.env:/app/.env
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - chatbot-net
    extra_hosts:
      - 'host.docker.internal:host-gateway'

volumes:
  postgres_data:
  mongo_data:
  frontend_node_modules:

networks:
  chatbot-net:
    driver: bridge
